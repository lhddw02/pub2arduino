import rclpy
from rclpy.node import Node

from std_msgs.msg import String

import serial
arduinoData = serial.Serial('/dev/ttyACM0' , 9600)

class SerialNode(Node):

    def __init__(self):
        super().__init__('pub2arduino_node')
        #self.publisher_ = self.create_publisher(String, 'topic', 10)
        #timer_period = 0.5  # seconds
        #self.timer = self.create_timer(timer_period, self.timer_callback)
        #self.i = 0
        
        self.subscription = self.create_subscription(
        	String,
        	'serial_communication',
        	self.command

    def timer_callback(self):
        msg = String()
        msg.data = 'Hello World: %d' % self.i
        self.publisher_.publish(msg)
        self.get_logger().info('Publishing: "%s"' % msg.data)
        self.i += 1
    
    def command_callback(self, msg):
    	self.get_logger().info("Sending command: %s" % msg.data)
        



def main(args=None):
    rclpy.init(args=args)

    pub2arduino_node = SerialNode()

    rclpy.spin(pub2arduino_node)

    # Destroy the node explicitly
    # (optional - otherwise it will be done automatically
    # when the garbage collector destroys the node object)
    pub2arduino_node.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()
